1. Queries 1. SELECT books.subject_name FROM books INNER JOIN suppliers ON books.supplier_id = suppliers.supplier_id WHERE suppliers.supplier_name = 'supplier2';2. SELECT books.book_name, books.price FROM books INNER JOIN suppliers ON books.supplier_id = suppliers.supplier_id WHERE suppliers.supplier_name = 'supplier3' ORDER BY books.price DESC LIMIT 1;3. SELECT DISTINCT books.book_name FROM books INNER JOIN order_details ON books.book_id = order_details.book_id INNER JOIN orders ON order_details.order_id = orders.order_id INNER JOIN customers ON orders.customer_id = customers.customer_id WHERE customers.last_name = 'lastname1' AND customers.first_name = 'firstname1';4. SELECT books.book_title FROM books WHERE books.units_in_stock > 10;5. SELECT customers.first_name, customers.last_name, SUM(order_details.quantity * books.price) AS total_price FROM customers INNER JOIN orders ON customers.customer_id = orders.customer_id INNER JOIN order_details ON orders.order_id = order_details.order_id INNER JOIN books ON order_details.book_id = books.book_id WHERE customers.last_name = 'lastname1' AND customers.first_name = 'firstname1';6. SELECT customers.first_name, customers.last_name FROM customers INNER JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customers.customer_id HAVING SUM(order_details.quantity * books.price) < 80;7. SELECT books.book_name FROM books INNER JOIN suppliers ON books.supplier_id = suppliers.supplier_id WHERE suppliers.supplier_name = 'supplier2';8. SELECT customers.first_name, customers.last_name, SUM(order_details.quantity * books.price) AS total_price FROM customers INNER JOIN orders ON customers.customer_id = orders.customer_id INNER JOIN order_details ON orders.order_id = order_details.order_id INNER JOIN books ON order_details.book_id = books.book_id GROUP BY customers.customer_id ORDER BY total_price DESC;9. SELECT books.book_name, shippers.shipper_name FROM books INNER JOIN order_details ON books.book_id = order_details.book_id INNER JOIN orders ON order_details.order_id = orders.order_id INNER JOIN shippers ON orders.shipper_id = shippers.shipper_id WHERE orders.shipped_date = '2016-08-04';10. SELECT DISTINCT books.book_name FROM books INNER JOIN order_details ON books.book_id = order_details.book_id INNER JOIN orders ON order_details.order_id = orders.order_id INNER JOIN customers ON orders.customer_id = customers.customer_id WHERE customers.last_name = 'lastname1' AND customers.first_name = 'firstname1' AND books.book_name IN (SELECT DISTINCT books.book_name FROM books INNER JOIN order_details ON books.book_id = order_details.book_id INNER JOIN orders ON order_details.order_id = orders.order_id INNER JOIN customers ON orders.customer_id = customers.customer_id WHERE customers.last_name = 'lastname4' AND customers.first_name = 'firstname4');11. SELECT books.book_name FROM books INNER JOIN order_details ON books.book_id = order_details.book_id INNER JOIN orders ON order_details.order_id = orders.order_id INNER JOIN employees ON orders.employee_id = employees.employee_id WHERE employees.last_name = 'lastname6' AND employees.first_name = 'firstname6';12. SELECT books.book_name, SUM(order_details.quantity) AS total_quantity FROM books INNER JOIN order_details ON books.book_id = order_details.book_id GROUP BY books.book_id ORDER BY total_quantity ASC;13. SELECT customers.first_name, customers.last_name FROM customers INNER JOIN orders ON customers.customer_id = orders.customer_id INNER JOIN order_details ON orders.order_id = order_details.order_id GROUP BY customers.customer_id HAVING COUNT(DISTINCT orders.order_id) >= 2;14. SELECT DISTINCT c.customer_name, b.book_title FROM db_customer c JOIN db_order o ON c.customer_id = o.customer_id JOIN db_order_detail od ON o.order_id = od.order_id JOIN db_book b ON od.book_id = b.book_id WHERE b.category IN ('category3', 'category4');15. SELECT DISTINCT customers.first_name, customers.last_name FROM customersINNER JOIN orders ON customers.customer_id = orders.customer_id INNER JOIN order_details ON orders.order_id = order_details.order_id INNER JOIN books ON order_details.book_id = books.book_id INNER JOIN book_authors ON books.book_id = book_authors.book_id INNER JOIN authors ON book_authors.author_id = authors.author_id WHERE authors.author_name LIKE '%author1%';16. SELECT employees.first_name, employees.last_name, SUM(order_details.quantity * books.price) AS total_sale FROM employees INNER JOIN orders ON employees.employee_id = orders.employee_id INNER JOIN order_details ON orders.order_id = order_details.order_id INNER JOIN books ON order_details.book_id = books.book_id GROUP BY employees.employee_id;17. SELECT books.book_name, order_details.quantity FROM orders INNER JOIN order_details ON orders.order_id = order_details.order_id INNER JOIN books ON order_details.book_id = books.book_id WHERE orders.shipped_date IS NULL AND orders.order_date < '2016-08-05 00:00:00';18. SELECT customers.first_name, customers.last_name, SUM(order_details.quantity) AS total_quantity FROM customers INNER JOIN orders ON customers.customer_id = orders.customer_id INNER JOIN order_details ON orders.order_id = order_details.order_id GROUP BY customers.customer_id HAVING total_quantity > 1 ORDER BY total_quantity DESC;19. SELECT customers.first_name, customers.last_name, customers.phone FROM customers INNER JOIN orders ON customers.customer_id = orders.customer_id INNER JOIN order_details ON orders.order_id = order_details.order_id GROUP BY customers.customer_id HAVING SUM(order_details.quantity) > 3;